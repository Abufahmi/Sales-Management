@using Sales.Client.Models
@using Sales.Client.Repositories

@page "/Login"
@inject IAccountRepository repo

<div class="container">
    <div class="col-lg-4 col-md-6 col-sm-8 mx-auto bg-white p-4 mt-4 shadow">
        @if (ErrorMessage != null)
        {
            <div class="alert alert-danger alert-dismissible fade show popup @(AppServices.IsArabic ? "text-right" : "text-left")"
                 @onclick="HideMessage" role="alert">
                @ErrorMessage
                <button type="button" class="btn-close"></button>
            </div>
        }

        <div class="text-center">
            <img src="images/main/login.png" class="img-fluid my-3" style="max-width:175px" />
        </div>

        <EditForm Model="Login" OnValidSubmit="OnValidSubmit" FormName="LoginForm">
            <DataAnnotationsValidator />

            <!-- User name -->
            <div class="mb-4">
                <label class="form-label">
                    @Localizer[nameof(Strings.UserNameOrEmail)]
                </label>
                <InputText type="text" @bind-Value="Login.UserName" @oninput="UserNameChange" class="form-control" />
                <ValidationMessage For="()=> Login.UserName" />
            </div>

            <!-- Password input -->
            <div class="mb-4">
                <label class="form-label">
                    @Localizer[nameof(Strings.Password)]
                </label>
                <InputText type="password" class="form-control" @oninput="PasswordChange" @bind-Value="Login.Password" />
                <ValidationMessage For="()=> Login.Password" />
            </div>

            <!-- Submit button -->
            <button type="submit" class="btn btn-primary w-100 mb-4" disabled="@Disabled">
                @Localizer[nameof(Strings.Login)]
            </button>

            <!-- Register -->
            <div class="mb-2 mb-3 text-center">
                <span class="text-secondary">@Localizer[nameof(Strings.NoAccount)]</span>
                <a href="/Register" class="btn-link text-decoration-none">
                    <span>@Localizer[nameof(Strings.Register)]</span>
                </a>
            </div>

            <!-- Forget password -->
            <div class="mb-2 mb-3 text-center">
                <span class="text-secondary">@Localizer[nameof(Strings.ForgetPassword)]</span>
                <a href="/ForgetPassword" class="btn-link text-decoration-none">
                    <span>@Localizer[nameof(Strings.ForgetPasswordRecovery)]</span>
                </a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    string? ErrorMessage = null;
    bool Disabled = true;
    LoginModel Login = new LoginModel();

    async Task OnValidSubmit()
    {
        if (Login == null || Login.UserName == null || Login.Password == null || Login.Password.Length < 6)
            return;

        bool result = await repo.LoginAsync(Login);
        if (result)
        {
            NavManager.NavigateTo("/", true);
        }
        else
        {
            if (AppServices.Error != null)
            {
                ErrorMessage = AppServices.Error;
            }
            else
            {
                ErrorMessage = Localizer[nameof(Strings.UnknowError)]?.Value;
            }
        }
    }

    void HideMessage()
    {
        ErrorMessage = null;
    }

    void UserNameChange(ChangeEventArgs args)
    {
        Disabled = true;
        if (args?.Value == null) return;
        var txt = args.Value as string;
        if (!string.IsNullOrWhiteSpace(txt) && !string.IsNullOrWhiteSpace(Login.Password))
        {
            Disabled = false;
        }
    }

    void PasswordChange(ChangeEventArgs args)
    {
        Disabled = true;
        if (args?.Value == null) return;
        var txt = args.Value as string;
        if (!string.IsNullOrWhiteSpace(txt) && !string.IsNullOrWhiteSpace(Login.UserName))
        {
            Disabled = false;
        }
    }
}
